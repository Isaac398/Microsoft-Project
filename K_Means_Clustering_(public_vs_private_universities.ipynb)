{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "K - Means Clustering (public vs private universities.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPc+P2NSvP7YmtDkCVVOeGX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Isaac398/Microsoft-Project/blob/main/K_Means_Clustering_(public_vs_private_universities.ipynb)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tq3kN8olTV8q"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "get_ipython().run_line_magic('matplotlib', 'inline')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZoKmzIRMUBer"
      },
      "source": [
        "# Read in the College_Data file using read_csv. \n",
        "data_clg = pd.read_csv('/content/College_Data',index_col=0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "fA3wnNxHUBhH",
        "outputId": "ba666a04-8e58-45af-c441-f1058b588e28"
      },
      "source": [
        "# reading the data \n",
        "data_clg.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Private</th>\n",
              "      <th>Apps</th>\n",
              "      <th>Accept</th>\n",
              "      <th>Enroll</th>\n",
              "      <th>Top10perc</th>\n",
              "      <th>Top25perc</th>\n",
              "      <th>F.Undergrad</th>\n",
              "      <th>P.Undergrad</th>\n",
              "      <th>Outstate</th>\n",
              "      <th>Room.Board</th>\n",
              "      <th>Books</th>\n",
              "      <th>Personal</th>\n",
              "      <th>PhD</th>\n",
              "      <th>Terminal</th>\n",
              "      <th>S.F.Ratio</th>\n",
              "      <th>perc.alumni</th>\n",
              "      <th>Expend</th>\n",
              "      <th>Grad.Rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Abilene Christian University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>1660</td>\n",
              "      <td>1232</td>\n",
              "      <td>721</td>\n",
              "      <td>23</td>\n",
              "      <td>52</td>\n",
              "      <td>2885</td>\n",
              "      <td>537</td>\n",
              "      <td>7440</td>\n",
              "      <td>3300</td>\n",
              "      <td>450</td>\n",
              "      <td>2200</td>\n",
              "      <td>70</td>\n",
              "      <td>78</td>\n",
              "      <td>18.1</td>\n",
              "      <td>12</td>\n",
              "      <td>7041</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adelphi University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>2186</td>\n",
              "      <td>1924</td>\n",
              "      <td>512</td>\n",
              "      <td>16</td>\n",
              "      <td>29</td>\n",
              "      <td>2683</td>\n",
              "      <td>1227</td>\n",
              "      <td>12280</td>\n",
              "      <td>6450</td>\n",
              "      <td>750</td>\n",
              "      <td>1500</td>\n",
              "      <td>29</td>\n",
              "      <td>30</td>\n",
              "      <td>12.2</td>\n",
              "      <td>16</td>\n",
              "      <td>10527</td>\n",
              "      <td>56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adrian College</th>\n",
              "      <td>Yes</td>\n",
              "      <td>1428</td>\n",
              "      <td>1097</td>\n",
              "      <td>336</td>\n",
              "      <td>22</td>\n",
              "      <td>50</td>\n",
              "      <td>1036</td>\n",
              "      <td>99</td>\n",
              "      <td>11250</td>\n",
              "      <td>3750</td>\n",
              "      <td>400</td>\n",
              "      <td>1165</td>\n",
              "      <td>53</td>\n",
              "      <td>66</td>\n",
              "      <td>12.9</td>\n",
              "      <td>30</td>\n",
              "      <td>8735</td>\n",
              "      <td>54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agnes Scott College</th>\n",
              "      <td>Yes</td>\n",
              "      <td>417</td>\n",
              "      <td>349</td>\n",
              "      <td>137</td>\n",
              "      <td>60</td>\n",
              "      <td>89</td>\n",
              "      <td>510</td>\n",
              "      <td>63</td>\n",
              "      <td>12960</td>\n",
              "      <td>5450</td>\n",
              "      <td>450</td>\n",
              "      <td>875</td>\n",
              "      <td>92</td>\n",
              "      <td>97</td>\n",
              "      <td>7.7</td>\n",
              "      <td>37</td>\n",
              "      <td>19016</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Alaska Pacific University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>193</td>\n",
              "      <td>146</td>\n",
              "      <td>55</td>\n",
              "      <td>16</td>\n",
              "      <td>44</td>\n",
              "      <td>249</td>\n",
              "      <td>869</td>\n",
              "      <td>7560</td>\n",
              "      <td>4120</td>\n",
              "      <td>800</td>\n",
              "      <td>1500</td>\n",
              "      <td>76</td>\n",
              "      <td>72</td>\n",
              "      <td>11.9</td>\n",
              "      <td>2</td>\n",
              "      <td>10922</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                             Private  Apps  ...  Expend  Grad.Rate\n",
              "Abilene Christian University     Yes  1660  ...    7041         60\n",
              "Adelphi University               Yes  2186  ...   10527         56\n",
              "Adrian College                   Yes  1428  ...    8735         54\n",
              "Agnes Scott College              Yes   417  ...   19016         59\n",
              "Alaska Pacific University        Yes   193  ...   10922         15\n",
              "\n",
              "[5 rows x 18 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e1W0tPjcUBjv",
        "outputId": "b7ab6e3e-a70d-42b6-8e94-a55118eea25f"
      },
      "source": [
        "# check info\n",
        "data_clg.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 777 entries, Abilene Christian University to York College of Pennsylvania\n",
            "Data columns (total 18 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   Private      777 non-null    object \n",
            " 1   Apps         777 non-null    int64  \n",
            " 2   Accept       777 non-null    int64  \n",
            " 3   Enroll       777 non-null    int64  \n",
            " 4   Top10perc    777 non-null    int64  \n",
            " 5   Top25perc    777 non-null    int64  \n",
            " 6   F.Undergrad  777 non-null    int64  \n",
            " 7   P.Undergrad  777 non-null    int64  \n",
            " 8   Outstate     777 non-null    int64  \n",
            " 9   Room.Board   777 non-null    int64  \n",
            " 10  Books        777 non-null    int64  \n",
            " 11  Personal     777 non-null    int64  \n",
            " 12  PhD          777 non-null    int64  \n",
            " 13  Terminal     777 non-null    int64  \n",
            " 14  S.F.Ratio    777 non-null    float64\n",
            " 15  perc.alumni  777 non-null    int64  \n",
            " 16  Expend       777 non-null    int64  \n",
            " 17  Grad.Rate    777 non-null    int64  \n",
            "dtypes: float64(1), int64(16), object(1)\n",
            "memory usage: 115.3+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 304
        },
        "id": "dm4GOseCVZii",
        "outputId": "89e12bcc-fb60-4ab4-8c3a-0b91ddc07e65"
      },
      "source": [
        "# check discription of file\n",
        "data_clg.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Apps</th>\n",
              "      <th>Accept</th>\n",
              "      <th>Enroll</th>\n",
              "      <th>Top10perc</th>\n",
              "      <th>Top25perc</th>\n",
              "      <th>F.Undergrad</th>\n",
              "      <th>P.Undergrad</th>\n",
              "      <th>Outstate</th>\n",
              "      <th>Room.Board</th>\n",
              "      <th>Books</th>\n",
              "      <th>Personal</th>\n",
              "      <th>PhD</th>\n",
              "      <th>Terminal</th>\n",
              "      <th>S.F.Ratio</th>\n",
              "      <th>perc.alumni</th>\n",
              "      <th>Expend</th>\n",
              "      <th>Grad.Rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.000000</td>\n",
              "      <td>777.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3001.638353</td>\n",
              "      <td>2018.804376</td>\n",
              "      <td>779.972973</td>\n",
              "      <td>27.558559</td>\n",
              "      <td>55.796654</td>\n",
              "      <td>3699.907336</td>\n",
              "      <td>855.298584</td>\n",
              "      <td>10440.669241</td>\n",
              "      <td>4357.526384</td>\n",
              "      <td>549.380952</td>\n",
              "      <td>1340.642214</td>\n",
              "      <td>72.660232</td>\n",
              "      <td>79.702703</td>\n",
              "      <td>14.089704</td>\n",
              "      <td>22.743887</td>\n",
              "      <td>9660.171171</td>\n",
              "      <td>65.46332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3870.201484</td>\n",
              "      <td>2451.113971</td>\n",
              "      <td>929.176190</td>\n",
              "      <td>17.640364</td>\n",
              "      <td>19.804778</td>\n",
              "      <td>4850.420531</td>\n",
              "      <td>1522.431887</td>\n",
              "      <td>4023.016484</td>\n",
              "      <td>1096.696416</td>\n",
              "      <td>165.105360</td>\n",
              "      <td>677.071454</td>\n",
              "      <td>16.328155</td>\n",
              "      <td>14.722359</td>\n",
              "      <td>3.958349</td>\n",
              "      <td>12.391801</td>\n",
              "      <td>5221.768440</td>\n",
              "      <td>17.17771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>81.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>35.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>139.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2340.000000</td>\n",
              "      <td>1780.000000</td>\n",
              "      <td>96.000000</td>\n",
              "      <td>250.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3186.000000</td>\n",
              "      <td>10.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>776.000000</td>\n",
              "      <td>604.000000</td>\n",
              "      <td>242.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>992.000000</td>\n",
              "      <td>95.000000</td>\n",
              "      <td>7320.000000</td>\n",
              "      <td>3597.000000</td>\n",
              "      <td>470.000000</td>\n",
              "      <td>850.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>71.000000</td>\n",
              "      <td>11.500000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>6751.000000</td>\n",
              "      <td>53.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1558.000000</td>\n",
              "      <td>1110.000000</td>\n",
              "      <td>434.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>54.000000</td>\n",
              "      <td>1707.000000</td>\n",
              "      <td>353.000000</td>\n",
              "      <td>9990.000000</td>\n",
              "      <td>4200.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>1200.000000</td>\n",
              "      <td>75.000000</td>\n",
              "      <td>82.000000</td>\n",
              "      <td>13.600000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>8377.000000</td>\n",
              "      <td>65.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3624.000000</td>\n",
              "      <td>2424.000000</td>\n",
              "      <td>902.000000</td>\n",
              "      <td>35.000000</td>\n",
              "      <td>69.000000</td>\n",
              "      <td>4005.000000</td>\n",
              "      <td>967.000000</td>\n",
              "      <td>12925.000000</td>\n",
              "      <td>5050.000000</td>\n",
              "      <td>600.000000</td>\n",
              "      <td>1700.000000</td>\n",
              "      <td>85.000000</td>\n",
              "      <td>92.000000</td>\n",
              "      <td>16.500000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>10830.000000</td>\n",
              "      <td>78.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>48094.000000</td>\n",
              "      <td>26330.000000</td>\n",
              "      <td>6392.000000</td>\n",
              "      <td>96.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>31643.000000</td>\n",
              "      <td>21836.000000</td>\n",
              "      <td>21700.000000</td>\n",
              "      <td>8124.000000</td>\n",
              "      <td>2340.000000</td>\n",
              "      <td>6800.000000</td>\n",
              "      <td>103.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>39.800000</td>\n",
              "      <td>64.000000</td>\n",
              "      <td>56233.000000</td>\n",
              "      <td>118.00000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               Apps        Accept  ...        Expend  Grad.Rate\n",
              "count    777.000000    777.000000  ...    777.000000  777.00000\n",
              "mean    3001.638353   2018.804376  ...   9660.171171   65.46332\n",
              "std     3870.201484   2451.113971  ...   5221.768440   17.17771\n",
              "min       81.000000     72.000000  ...   3186.000000   10.00000\n",
              "25%      776.000000    604.000000  ...   6751.000000   53.00000\n",
              "50%     1558.000000   1110.000000  ...   8377.000000   65.00000\n",
              "75%     3624.000000   2424.000000  ...  10830.000000   78.00000\n",
              "max    48094.000000  26330.000000  ...  56233.000000  118.00000\n",
              "\n",
              "[8 rows x 17 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Fu0NBvbhV83J"
      },
      "source": [
        "**EXPLORING THE DATA**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "JqXDD-r2WB2-",
        "outputId": "bc63b32c-e7b0-4fe7-d8bf-174473cd1750"
      },
      "source": [
        "# scatterplot of Grad.Rate versus Room.Board ( coloured points )\n",
        "sns.set_style('whitegrid')\n",
        "sns.lmplot('Room.Board','Grad.Rate',data=data_clg, hue='Private',\n",
        "           palette='coolwarm',size=6,aspect=1,fit_reg=False)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/regression.py:580: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n",
            "  warnings.warn(msg, UserWarning)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7fd3ead868d0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 484x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "h77xjLbBWfO6",
        "outputId": "ce6f7398-c9c6-4b1c-938e-f84e67ed4a1c"
      },
      "source": [
        "# scatterplot of F.Undergrad versus Outstate ( coloured points )\n",
        "sns.set_style('whitegrid')\n",
        "sns.lmplot('Outstate','F.Undergrad',data=data_clg, hue='Private',\n",
        "           palette='coolwarm',size=6,aspect=1,fit_reg=False)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/regression.py:580: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n",
            "  warnings.warn(msg, UserWarning)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7fd3eac24950>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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/cADD/Cd73yH5uZmlixZwqJFi9i8efOofqF4XzYKgozlnOncV1XHRCSZw4cPDzq2YMECFixYMOTtSkpKOHjwYL+fz507t9966XvuuSd+23/8x3/sd9u7776bu+++e8xtTylQn3XWWUNWJpPik42M6bGcM537quqYiBSbYQP1ww8/jBHb4CCJv/qrv8p4g8QbslEQZCznTPW+WpYlIsVm2DnqSy65hIsvvphQKMTbb7/NnDlzmDNnDnV1dSOWFL3vvvtYuHAh119/ffzYD37wA6699lrWrFnDmjVreP311+M/e+qpp6itrWXFihXs27cvfnzv3r2sWLGC2tpatmzZEj/e0NDAxo0bqa2t5c4771SJU4nzTa8mcNVKSpd8jsBVKxWkRaSgDdujXrduHQA/+clP+PGPf4zf797885//PF/60peGPfH69ev5L//lv/Df//t/73f85ptv5itf+Uq/Y8ePH2fnzp3s3LmT5uZmNm3aFF979tBDD/EP//APVFVVsWHDBpYtW8Z5553H448/zs0338yqVavYvHkzW7du5Ytf/GJ6j15yzlPbYop4SGOLzbFG6AzBhCBcOAtmTdHqGklxjrq1tZWOjg4mT54MQFdXF62trcPe56qrruKDDz5IqRF79uxh1apVBAIBqqurmTNnDkeOHAHc3bliC8RXrVrFnj17OPfcc3njjTfi8+br1q3jySefVKD2uHTXOJd1uftI96uOZkUU4KXoNLbYHK4H04CAD3rCcLgewFawltQC9S233MK6detYsGABjuNw6NAhvvGNb4zqF/7zP/8z27dv55JLLuHee+9l0qRJNDc3c9lll8VvU1VVRXNzMwAzZ87sd/zIkSO0tLQwceLEeA9/5syZ8duPJBQKUVdXN6q2D9TT05Oxc+VCPtpb1tXCpPY/4o+GMO0otmFi+wOAu9zKsC26336DpqqOQfc76/Tv6TFNDMfBZ3VgABEzAJEWjLde59SUeXSXT8lY+6L+IK2VZ4/qnHovZFchtXc0bX2/4xwijh/TcIj0HrMdg8PHo5ypSK3DM1qF9NxC//bW1NTkuTW5kVKgvvHGG1myZAlvvfUWAP/1v/5Xpk+fnvYv+8IXvsBtt92GYRh8//vf57HHHuO73/1u2ucZi2AwmLEXt66urqDeKLlur9uDPgp+EwIV0H4aHw74TIySIOBW7yEaGtSu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7uPdsWOHP9aNGzdi27ZtAKb//laatxr12a003kZ+fqcVrohw4sQJvm/fPs455yMjI3zz5s384MGD/Nvf/jb/zne+U/b+gwcP8q1bt3LbtvmxY8f4DTfcwB3H4Y7j8BtuuIEfO3aM27bNt27dyg8ePFj38V5//fX8zJkzkdcefPBB/uijj3LOOX/00Uf5Qw89xDnn/IUXXuC33347Z4zxvXv38s9+9rOcc84HBgb4xo0b+cDAAB8cHOQbN27kg4ODdR9rGMdx+Ic//GHe19fXUPf21Vdf5fv27eNbtmzxX6vn/bzlllv43r17OWOM33777fyFF16o61j37NnDi8Ui55zzhx56yB9rb29v5H1hKo2p0nXXc7z1/O7vvPNO/vTTT3POOf/qV7/Kn3zyybqPN8wDDzzAH374Yc759N/fSvNWoz67lcbbyM/vdKIs6hIWLFiANWvWAADS6TSWL1+OEydOVHz/888/jy1btsA0TXR0dGDJkiXo7u5Gd3c3lixZgo6ODpimiS1btuD5558/J9fw/PPPY/v27QCA7du347nnnou8TgjB+vXrMTw8jJMnT+Kll17CNddcg9mzZ2PWrFm45pprIhbMVPDKK6+go6MDixcvrnod5/reXnXVVZg1a1bZOOpxP0+ePIlMJoP169eDEILt27dPatxxY7322muh6zoAYP369Th+/HjVY1QbU6Xrrud4KzHe755zjq6uLtx0000AgE9/+tOTfiaqjZdzjmeeeSZibcdxru5vpXmrUZ/dSuNt5Od3OlFCXYW+vj7s378fl19+OQDgySefxNatW3HPPff4bpQTJ05g0aJF/mcWLlyIEydOVHx9Krj99tvxmc98Bj/4wQ8AAGfOnMGCBQsAAPPnz8eZM2dix7po0aJzPlbJrl27IpNco95boH73s9L7p4of/ehH+OhHP+r/u6+vD9u3b8fv/u7v4vXXX696DUDl66439fjuBwYG0NLS4k/yU31vX3/9dcydOxdLly71X2uU+xuet2bCs1s6z0pmyvN7LlBCXYHR0VHceeed+MpXvoJ0Oo3Pfe5z+NnPfoaf/OQnWLBgAb7xjW9M9xABAP/xH/+Bp556Cv/2b/+GJ598Eq+99lrk54QQEEKmaXTxFAoF/PznP8fHP/5xAGjYextHI97POB555BFomoZPfepTAIQF87//+7/YuXMn7r77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\n",
            "text/plain": [
              "<Figure size 484x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "0i91K8YkWfzm",
        "outputId": "73598710-ab32-404d-fb3d-6ef3bd0f20d6"
      },
      "source": [
        "# stackaed histogram of outstate tuition using sns for Private\n",
        "plt.figure(figsize=(16, 8))\n",
        "\n",
        "data_clg.loc[data_clg.Private == 'Yes', 'Outstate'].hist(label=\"Private College\", bins=30)\n",
        "data_clg.loc[data_clg.Private == 'No', 'Outstate'].hist(label=\"Non Private College\", bins=30)\n",
        "\n",
        "plt.xlabel('Outstate')\n",
        "plt.legend()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fd3ea7e6210>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 75
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "LYgpmlaAXgUa",
        "outputId": "50fa894c-a204-40f9-a217-27217fd00795"
      },
      "source": [
        "# stackaed histogram of Gaud.Rate using sns for Private\n",
        "plt.figure(figsize=(16, 8))\n",
        "\n",
        "data_clg.loc[data_clg.Private == 'Yes', 'Grad.Rate'].hist(label=\"Private College\", bins=30)\n",
        "data_clg.loc[data_clg.Private == 'No', 'Grad.Rate'].hist(label=\"Non Private College\", bins=30)\n",
        "\n",
        "plt.xlabel('Graduation Rate')\n",
        "plt.legend()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fd3ea7d3190>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 114
        },
        "id": "S9VW7DhQYRMb",
        "outputId": "8aae594b-1510-46af-ff69-22c39b8a53bb"
      },
      "source": [
        "#  private school with a graduation rate of higher than 100%\n",
        "data_clg[data_clg['Grad.Rate'] > 100]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Private</th>\n",
              "      <th>Apps</th>\n",
              "      <th>Accept</th>\n",
              "      <th>Enroll</th>\n",
              "      <th>Top10perc</th>\n",
              "      <th>Top25perc</th>\n",
              "      <th>F.Undergrad</th>\n",
              "      <th>P.Undergrad</th>\n",
              "      <th>Outstate</th>\n",
              "      <th>Room.Board</th>\n",
              "      <th>Books</th>\n",
              "      <th>Personal</th>\n",
              "      <th>PhD</th>\n",
              "      <th>Terminal</th>\n",
              "      <th>S.F.Ratio</th>\n",
              "      <th>perc.alumni</th>\n",
              "      <th>Expend</th>\n",
              "      <th>Grad.Rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Cazenovia College</th>\n",
              "      <td>Yes</td>\n",
              "      <td>3847</td>\n",
              "      <td>3433</td>\n",
              "      <td>527</td>\n",
              "      <td>9</td>\n",
              "      <td>35</td>\n",
              "      <td>1010</td>\n",
              "      <td>12</td>\n",
              "      <td>9384</td>\n",
              "      <td>4840</td>\n",
              "      <td>600</td>\n",
              "      <td>500</td>\n",
              "      <td>22</td>\n",
              "      <td>47</td>\n",
              "      <td>14.3</td>\n",
              "      <td>20</td>\n",
              "      <td>7697</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                  Private  Apps  Accept  ...  perc.alumni  Expend  Grad.Rate\n",
              "Cazenovia College     Yes  3847    3433  ...           20    7697        118\n",
              "\n",
              "[1 rows x 18 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q5xobMQcYMTk",
        "outputId": "e07e010a-c7c9-4ee9-b5f1-2891bab5ab3c"
      },
      "source": [
        "# Set that school's graduation rate to 100 so it makes sense\n",
        "# when doing this operation, so use dataframe operations or just re-do the histogram visualization to make sure it actually went through.\n",
        "data_clg['Grad.Rate']['Cazenovia College'] = 100"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  This is separate from the ipykernel package so we can avoid doing imports until\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 67
        },
        "id": "mVddY2fyYMqK",
        "outputId": "a13cff49-ed86-47ae-86ee-c343558a2596"
      },
      "source": [
        "data_clg[data_clg['Grad.Rate'] > 100]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Private</th>\n",
              "      <th>Apps</th>\n",
              "      <th>Accept</th>\n",
              "      <th>Enroll</th>\n",
              "      <th>Top10perc</th>\n",
              "      <th>Top25perc</th>\n",
              "      <th>F.Undergrad</th>\n",
              "      <th>P.Undergrad</th>\n",
              "      <th>Outstate</th>\n",
              "      <th>Room.Board</th>\n",
              "      <th>Books</th>\n",
              "      <th>Personal</th>\n",
              "      <th>PhD</th>\n",
              "      <th>Terminal</th>\n",
              "      <th>S.F.Ratio</th>\n",
              "      <th>perc.alumni</th>\n",
              "      <th>Expend</th>\n",
              "      <th>Grad.Rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [Private, Apps, Accept, Enroll, Top10perc, Top25perc, F.Undergrad, P.Undergrad, Outstate, Room.Board, Books, Personal, PhD, Terminal, S.F.Ratio, perc.alumni, Expend, Grad.Rate]\n",
              "Index: []"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "9mHimTvJaRIi",
        "outputId": "2ce0f0bf-5f0a-4274-e350-4d75d35ce33f"
      },
      "source": [
        "plt.figure(figsize=(16, 8))\n",
        "\n",
        "data_clg.loc[data_clg.Private == 'Yes', 'Grad.Rate'].hist(label=\"Private College\", bins=30)\n",
        "data_clg.loc[data_clg.Private == 'No', 'Grad.Rate'].hist(label=\"Non Private College\", bins=30)\n",
        "\n",
        "plt.xlabel('Graduation Rate')\n",
        "plt.legend()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fd3ea56a510>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA54AAAHgCAYAAADNOLJ/AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3de5RXdb0//ufADAyKYCDIqvgdxVuEFrXwQmrHEC8xIJc0b8db65SnMlPMIi3jmCaVciwrk2Wiro5lRxFCNEysBaaS165gkmDiEjBuojLMxfn9wddZxyPIcHnPMOPj8d9nz97v12t/eM+ez5O992dXNDU1NQUAAAAK6dTWDQAAANCxCZ4AAAAUJXgCAABQlOAJAABAUYInAAAARQmeAAAAFFXZmsWeeuqpdO3atTVLspPasGGDuUCHYT7TkZjPdDTmNB1Je5jPGzZsyODBg9+yvFWDZ9euXTNw4MDWLMlOasGCBeYCHYb5TEdiPtPRmNN0JO1hPi9YsGCTy11qCwAAQFGCJwAAAEUJngAAABTVqvd4AgAA7Ut9fX2WLl2a2tratm7lHa++vn6z91C2turq6rz3ve9NVVVVi9YXPAEAgM1aunRpdtttt+y1116pqKho63be0davX59u3bq1dRtpamrKypUrs3Tp0uy9994t2saltgAAwGbV1tamd+/eQifNKioq0rt37606Cy54AgAAb0vo5P/a2jkheAIAADu1gQMHZvTo0Rk5cmTOP//8rF+/fpPrnXLKKds0/tKlSzNz5syt3u6ll17KhRdemOHDh2fcuHH59Kc/ncWLF79tnZEjRyZJ5s+fn3PPPXeb+m2PBE8AAKDFausbW3286urqzJgxI3fffXeqqqry85///E0/b2hoSJK3LG+pF154IXffffdWbdPU1JTzzjsvhxxySO6///5MmzYtF110UVauXLlNPXR0vlwIAABoseqqztlrwqwdNt6SSTVbtf6QIUPy9NNPZ/78+fne976XHj16ZPHixZk9e3Y+9KEP5cknn8yFF16Y0aNH56ijjkqSTJgwIUcddVQOPPDAfPnLX24+Y/r1r389H/7wh3PNNdfk73//e0aPHp2xY8fmjDPOyNVXX53f//73qaury+mnn/6Ws6mPPPJIKisrc+qppzYve9/73pdkYyj9zne+k3nz5qWioiKf/exnM2LEiM3u02uvvZZvfvObeeaZZ9LQ0JDzzjsvw4cPz/r16zNhwoQ888wz2XvvvbNs2bJMnDgxBx10UB588MFcd911qaurS//+/XPVVVdl11133ar3sjUJngAAQLvQ0NCQuXPn5sgjj0yS/PWvf83MmTPTv3//N603YsSI3HvvvTnqqKNSV1eXhx9+OBMnTkxTU1OmTp2arl27ZsmSJRk/fnzzmcqbbropN9xwQ5Lk9ttvz2677ZY777wzdXV1OeWUU3L44Ye/qc4zzzyTQYMGbbLP++67LwsXLsyMGTOyevXqnHjiiRkyZMhm9+vHP/5xDjvssFx11VV5+eWXc9JJJ+UjH/lIfvazn6Vnz56555578re//S1jxoxJkqxatSrXX399pk6dml122SVTpkzJ1KlTc955523X+1uS4AkAAOzUamtrM3r06CQbz3ieeOKJefLJJ3PQQQe9JXQmyUc/+tFceeWVqaury9y5czNkyJBUV1dn3bp1ufzyy7Nw4cJ06tQpS5Ys2WS93/3ud3n66acze/bsJMm6devy3HPPbbLWpjz++OOpqalJ586ds8cee+Tggw/On/70pxxwwAGbXP/BBx/MAw88kJtuuilJsmHDhrz44ot5/PHHc+aZZyZJ9t9//+y3335Jkj/84Q9ZtGhR89nW+vr6DB48uEW9tRXBEwAA2Km9cY/n/7XLLrtscv2uXbvmkEMOybx583Lvvfc2X+Z68803Z4899siMGTPy+uuv5wMf+MAmt29qasrXvva15jOrm7Lffvs1B9Md4fvf/34GDBjQonWbmppy+OGHZ/LkyTusfmm+XAgAAOhwRowYkWnTpuWxxx5rDpDr1q1Lnz590qlTp8yYMSONjRu/2GjXXXfNq6++2rztEUcckZ/97Gepr69PkixevDivvfbam8Y/7LDDUldXl9tvv7152cKFC/PYY49lyJAhuffee9PY2JhVq1blscce22zIfaPeT3/60zQ1NSXZeAlxknz4wx/OvffemyRZtGhRFi1alCQZPHhwnnjiiTz33HNJNt4j+nbfprszEDwBAIAO5/DDD8+jjz6aj3zkI+nSpUuS5LTTTstdd92VE044Ic8++2zzGdMDDjggnTp1ygknnJCbb745J510Uvbdd9+MGzcuI0eOzGWXXdYcUt9QUVGRH/zgB3nooYcyfPjw1NTUZPLkydljjz1yzDHHZP/998/o0aNz1lln5eKLL06fPn022+vnPve5NDQ05IQTTkhNTU2+973vNfe7evXqjBgxItdee20GDBiQ3XbbLb169cpVV12V8ePHZ9SoUTn55JPz7LPPFnond4yKpjdidStYsGBBBg4c2Frl2ImZC3Qk5jMdiflMR2NOb7//+x7W1jemuqrzDht/R4/XkTQ2NqahoSFdu3bNP/7xj5x11lmZPXt2c5Bua5v6/drc75x7PAEAgBbb0SFR6Ny89evX58wzz0xDQ0OamppyySWX7DShc2sJngAAADuh7t27Z9q0ac2v33j+aHvkHk8AAACKEjwBgA6vtr5xyyu1ozoA7Y1LbQGADq+6qnP2mjCreJ0lk2qK1wBoj5zxBAAAoCjBEwAA2KkdcMABmTRpUvPrn/zkJ7nuuut2yNgDBw7M6NGjM3LkyJx//vmb/QKfU045ZZvGX7p0aWbOnLnV27300ku58MILM3z48IwbNy6f/vSn89xzz71tnZEjRyZJ5s+fn3PPPXeb+i1F8AQAAFquvrbVx+vSpUvuu+++rFq1asfWTlJdXZ0ZM2bk7rvvTlVVVX7+85+/6ecNDQ1J8pblLfXCCy/k7rvv3qptmpqact555+WQQw7J/fffn2nTpuWiiy7KypUrt6mHnYF7PAEAgJarqk4m9txx401cu8VVKisrc/LJJ+eWW27JhRde+KafLV26NJdccklWr16dXr165aqrrsq73/3uTJgwId27d8+f//znvPTSS7n44otz/PHHv22dIUOG5Omnn878+fPzve99Lz169MjixYsze/bsfOhDH8qTTz6ZCy+8MKNHj85RRx2VJJkwYUKOOuqoHHjggfnyl7/cfMb061//ej784Q/nmmuuyd///veMHj06Y8eOzRlnnJGrr746v//971NXV5fTTz/9LWdTH3nkkVRWVubUU09tXva+970v69evT1NTU77zne9k3rx5qaioyGc/+9mMGDFis/v02muv5Zvf/GaeeeaZNDQ05Lzzzsvw4cOzfv36TJgwIc8880z23nvvrFixIpdddlkOOuigPPjgg7nuuutSV1eX/v3756qrrsquu+66xX+nt+OMJwAAsNM7/fTTM3PmzKxbt+5Ny6+44oqMHTs2M2fOzKhRo3LFFVc0/2zFihW57bbbcsMNN+Saa6552/EbGhoyd+7c7L///kmSv/71r7n00ksze/bsN603YsSI3HvvvUmSurq6PPzwwznqqKPSu3fvTJ06NXfddVf+67/+q7mPiy66KEOGDMmMGTNy9tln54477shuu+2WO++8M3feeWd+8Ytf5Pnnn39TjWeeeSaDBg3aZJ/33XdfFi5cmBkzZmTq1Kn5zne+kxUrVmx2v3784x/nsMMOyx133JFbb7013/3ud/Paa6/ltttuS8+ePXPPPffki1/8Yv7yl78kSVatWpXrr7++eV8OPPDATJ069W3fu5ZwxhMAANjpde/ePaNHj86tt96a6urq5uVPPvlk8/2eo0ePzne/+93mnw0fPjydOnXKvvvum3/+85+bHLe2tjajR49OsvGM54knnpgnn3wyBx10UPr37/+W9T/60Y/myiuvTF1dXebOnZshQ4akuro669aty+WXX56FCxemU6dOWbJkySbr/e53v8vTTz/dHGjXrVuX5557bpO1NuXxxx9PTU1NOnfunD322CMHH3xw/vSnP+WAAw7Y5PoPPvhgHnjggdx0001Jkg0bNuTFF1/M448/njPPPDNJsv/++zdv/4c//CGLFi1qPttaX1+fwYMHt6i3tyN4AgAA7cJZZ52VcePGZdy4cS1av0uXLltc5417PP+vXXbZZZPrd+3aNYccckjmzZuXe++9t/ky15tvvjl77LFHZsyYkddffz0f+MAHNrl9U1NTvva1r+XII4/cbE/77bffW860bo/vf//7GTBgQIvWbWpqyuGHH57JkyfvsPqJS20BAIB2Yvfdd8/xxx+fO+64o3nZhz70ocyatfE5vTNnzsyQIUOK9zFixIhMmzYtjz32WHOAXLduXfr06ZNOnTplxowZaWxsTJLsuuuuefXVV5u3PeKII/Kzn/0s9fX1SZLFixfntddee9P4hx12WOrq6nL77bc3L1u4cGGeeOKJDBkyJPfee28aGxuzatWqPPbYY5sNuW/U++lPf5qmpqYkGy8hTpIPf/jDzZcML1q0KH/729+SJIMHD84TTzzR/A26r732WhYvXrztb9b/I3gCAADtxqc+9amsXr26+fXXv/71TJs2LaNGjcqMGTNy6aWXFu/h8MMPz6OPPpqPfOQjzWdVTzvttNx111054YQT8uyzzzafMT3ggAPSqVOnnHDCCbn55ptz0kknZd999824ceMycuTIXHbZ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l19+OStWrGj1nltK8KTVLF26NAsWLMgHP/jBrFy5Mn379k2S9OnTJytXrmzj7qBlvvWtb+Xiiy9Op04bD5+rV69Ojx49Ulm58elU/fr1y/Lly9uyRWixpUuXplevXvnqV7+aMWPG5NJLL81rr73mGE27tOeee+ZTn/pUPvaxj+WII45I9+7dM2jQIMdo2r3NHZOXL1+efv36Na+3s89vwZNW8eqrr+b888/PJZdcku7du7/pZxUVFamoqGijzqDlfvOb36RXr1458MAD27oV2CEaGhry17/+NaeeemqmT5+ebt26veWyWsdo2ou1a9dmzpw5mTNnTubNm5f169dn3rx5bd0W7FDt+Zhc2dYN0PHV19fn/PPPz6hRo3LssccmSXr37p0VK1akb9++WbFiRXr16tXGXcKWPfHEE3nggQcyd+7cbNiwIa+88kquvPLKvPzyy2loaEhlZWWWLVuWPffcs61bhRbp169f+vXrlw9+8INJkuOPPz5TpkxxjKZdeuihh/Le9763eb4ee+yxeeKJJxyjafc2d0zec889s2zZsub1dvb57YwnRTU1NeXSSy/NgAEDcs455zQvHzZsWKZPn54kmT59eo4++ui2ahFa7KKLLsrcuXPzwAMPZPLkyTnssMNyzTXX5NBDD83s2bOTJHfddVeGDRvWxp1Cy/Tp0yf9+vXLs88+myR5+OGHs88++zhG0y69+93vzh/+8IesX78+TU1Nefjhh7Pvvvs6RtPube6Y/MbypqamPPXUU9ltt92aL8ndGVU0NTU1tXUTdFyPPfZYTj/99Oy///7N98SNHz8+H/jAB3LBBRfkxRdfzLvf/e5ce+212X333du4W2i5+fPn56abbsoNN9yQ559/PhdeeGHWrl2bgQMH5uqrr06XLl3aukVokQULFuTSSy9NfX19+vfvn6uuuiqvv/66YzTt0ve///3cc889qayszMCBA3PllVdm+fLljtG0G+PHj8/vf//7rF69Or17984XvvCFDB8+fJPH5Kamplx++eWZN29eunXrlm9961s56KCD2noXNkvwBAAAoCiX2gIAAFCU4AkAAEBRgicAAABFCZ4AAAAUJXgCAABQlOAJQLv1z3/+MxdddFGOPvrojBs3LieffHJ+/etfb9eY1113XX7yk59s07ZLly7NzJkzm1//6U9/yhVXXLFd/bxh2LBhGTVqVEaNGpV/+7d/ywsvvLBVvQBAWxI8AWiXmpqa8vnPfz5DhgzJnDlzMm3atEyePDnLli17y7oNDQ2t0tMLL7yQu+++u/n1QQcdlK997Ws7bPxbbrklM2fOzCGHHJLrr79+q3oBgLYkeALQLj3yyCOpqqrKqaee2rzsPe95T84444wkybRp0/If//EfOfPMM3P22Wfn1VdfzVlnnZWxY8dm1KhRuf/++5u3u/7663Pcccfl1FNPzeLFi5uXn3HGGfnTn/6UJFm1alWGDRuWZOPZxNNOOy1jx47N2LFj88QTTyRJrrnmmjz22GMZPXp0br755syfPz/nnntukmTNmjX53Oc+l1GjRuWTn/xkFi5cmGTjGdavfvWrOeOMM3L00Ufn1ltv3eK+Dx48OMuXL9+qXhobG/Ptb387n/jEJzJq1Kj8/Oc/37Y3HgC2QWVbNwAA2+KZZ57J+9///rdd569//Wt++ctfZvfdd09DQ0N++MMfpnv37lm1alVOPvnkHH300fnLX/6Se+65J9OnT09jY2PGjh2bQYMGve24vXv3ztSpU9O1a9csWbIk48ePz7Rp03LRRRflpptuyg033JAkmT9/fvM21113Xd7//vfnRz/6UR5++OF85StfyYwZM5Ikixcvzq233ppXXnklH//4x3Pqqaemqqpqs/XnzZuX4cOHb1Uvt99+e3bbbbfceeedqauryymnnJLDDz88/fv33/KbDQDbSfAEoEP4z//8zzz++OOpqqrKnXfemSQ5/PDDs/vuuyfZeGnu5MmT8+ijj6ZTp05Zvnx5/vnPf+axxx7L8OHD061btyRpPqv5dhoaGnL55Zdn4cKF6dSpU5YsWbLFbR5//PFcd911SZKhQ4dmzZo1eeWVV5Ik//qv/5ouXbqkV69e6dWrV1auXJl+/fq9ZYyzzjora9asyS677JIvfvGLW9XL7373uzz99NOZPXt2kmTdunV57rnnBE8AWoXgCUC7tN9+++W+++5rfv2Nb3wjq1atyoknnti87I0wmSQzZ87MqlWrMm3atFRVVWXYsGHZsGHD29bo3LlzmpqakiR1dXXNy2+++ebssccemTFjRl5//fV84AMf2K596dKly5tqbu6e1FtuuSU9evTIl770peZLdFvaS1NTU772ta/lyCOP3K5eAWBbuMcTgHbpsMMOy4YNG3Lbbbc1L6utrd3s+uvWrUvv3r1TVVWVRx55pPlbYQ8++ODcf//9qa2tzSuvvJLf/OY3zdu85z3vyZ///Ockya9+9as3jdWnT5906tQpM2bMSGNjY5Jk1113zauvvrrJ+kOGDMkvf/nLJBsvwX3Xu96V7t27b/V+V1ZW5pJLLsn06dOzZs2aFvdyxBFH5Gc/+1nq6+uTbLy897XXXtvq+gCwLZzxBKBdqqioyA9/+MNcddVVufHGG9OrV69069YtX/rSlza5/qhRo/LZz342o0aNyoEHHpgBAwYkSQYNGpQRI0Zk9OjR6dWrVw466KDmbT71qU/lggsuyC9+8Yv867/+a/Py0047LV/4whcyffr0HHnkkdlll12SJAcccEA6deqUE044IePGjcvAgQObtznvvPNyySWXZNSoUenWrVsmTZq0zfvet2/fjBw5Mv/93//d4l7OPPPMvPDCCxk3blyampryrne9Kz/60Y+2uQcA2BoVTW9cQwQAAAAFuNQWAACAogRPAAAAihI8AQAAKErwBAAAoCjBEwAAgKIETwAAAIoSPAEAAChK8AQAAKCo/x8RHj1cQ6p1DAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "344PLcOpaj0v"
      },
      "source": [
        "**K Means Cluster Creation**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X4C8_9Q2agPD"
      },
      "source": [
        "# Import KMeans from SciKit Learn.\n",
        "from sklearn.cluster import KMeans"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dVdEsso9atwB"
      },
      "source": [
        "# Create an instance of a K Means model with 2 clusters.\n",
        "kmeans = KMeans(n_clusters=2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "24x7w5iHatzJ",
        "outputId": "aeb2d256-2821-43d6-9bba-f732d4160695"
      },
      "source": [
        "# Fit the model to all the data except for the Private label.\n",
        "kmeans.fit(data_clg.drop('Private',axis=1))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n",
              "       n_clusters=2, n_init=10, n_jobs=None, precompute_distances='auto',\n",
              "       random_state=None, tol=0.0001, verbose=0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CQgTHtY0at2u",
        "outputId": "0295f4d5-9921-4ade-ac90-cec92c2ad144"
      },
      "source": [
        "# cluster centers\n",
        "kmeans.cluster_centers_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.03631389e+04, 6.55089815e+03, 2.56972222e+03, 4.14907407e+01,\n",
              "        7.02037037e+01, 1.30619352e+04, 2.46486111e+03, 1.07191759e+04,\n",
              "        4.64347222e+03, 5.95212963e+02, 1.71420370e+03, 8.63981481e+01,\n",
              "        9.13333333e+01, 1.40277778e+01, 2.00740741e+01, 1.41705000e+04,\n",
              "        6.75925926e+01],\n",
              "       [1.81323468e+03, 1.28716592e+03, 4.91044843e+02, 2.53094170e+01,\n",
              "        5.34708520e+01, 2.18854858e+03, 5.95458894e+02, 1.03957085e+04,\n",
              "        4.31136472e+03, 5.41982063e+02, 1.28033632e+03, 7.04424514e+01,\n",
              "        7.78251121e+01, 1.40997010e+01, 2.31748879e+01, 8.93204634e+03,\n",
              "        6.50926756e+01]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gxc6Xd29bHdn"
      },
      "source": [
        "# Evaluation\n",
        "# Create a new column for df called 'Cluster', which is a 1 for a Private school, and a 0 for a public school.\n",
        "def converter(cluster):\n",
        "    if cluster=='Yes':\n",
        "        return 1\n",
        "    else:\n",
        "        return 0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8WGqyXb9bHgH",
        "outputId": "2960e076-0d58-4993-f40d-a8e2c28540b3"
      },
      "source": [
        "data_clg['Cluster'] = data_clg['Private'].apply(converter)\n",
        "print(data_clg.Cluster)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Abilene Christian University      1\n",
            "Adelphi University                1\n",
            "Adrian College                    1\n",
            "Agnes Scott College               1\n",
            "Alaska Pacific University         1\n",
            "                                 ..\n",
            "Worcester State College           0\n",
            "Xavier University                 1\n",
            "Xavier University of Louisiana    1\n",
            "Yale University                   1\n",
            "York College of Pennsylvania      1\n",
            "Name: Cluster, Length: 777, dtype: int64\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "63bDVKQqcMu-",
        "outputId": "49d153b8-ae9f-491e-8fd3-cd5a1e3620a2"
      },
      "source": [
        "# Create a confusion matrix and classification report to see how well the Kmeans clustering worked without being given any labels.\n",
        "from sklearn.metrics import confusion_matrix,classification_report\n",
        "print(confusion_matrix(data_clg['Cluster'],kmeans.labels_))\n",
        "print(classification_report(data_clg['Cluster'],kmeans.labels_))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 74 138]\n",
            " [ 34 531]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.69      0.35      0.46       212\n",
            "           1       0.79      0.94      0.86       565\n",
            "\n",
            "    accuracy                           0.78       777\n",
            "   macro avg       0.74      0.64      0.66       777\n",
            "weighted avg       0.76      0.78      0.75       777\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "_YkHYNaJcnvR",
        "outputId": "11ced98d-20d3-46e6-872a-d48d991dcc8f"
      },
      "source": [
        "data_clg.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Private</th>\n",
              "      <th>Apps</th>\n",
              "      <th>Accept</th>\n",
              "      <th>Enroll</th>\n",
              "      <th>Top10perc</th>\n",
              "      <th>Top25perc</th>\n",
              "      <th>F.Undergrad</th>\n",
              "      <th>P.Undergrad</th>\n",
              "      <th>Outstate</th>\n",
              "      <th>Room.Board</th>\n",
              "      <th>Books</th>\n",
              "      <th>Personal</th>\n",
              "      <th>PhD</th>\n",
              "      <th>Terminal</th>\n",
              "      <th>S.F.Ratio</th>\n",
              "      <th>perc.alumni</th>\n",
              "      <th>Expend</th>\n",
              "      <th>Grad.Rate</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Abilene Christian University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>1660</td>\n",
              "      <td>1232</td>\n",
              "      <td>721</td>\n",
              "      <td>23</td>\n",
              "      <td>52</td>\n",
              "      <td>2885</td>\n",
              "      <td>537</td>\n",
              "      <td>7440</td>\n",
              "      <td>3300</td>\n",
              "      <td>450</td>\n",
              "      <td>2200</td>\n",
              "      <td>70</td>\n",
              "      <td>78</td>\n",
              "      <td>18.1</td>\n",
              "      <td>12</td>\n",
              "      <td>7041</td>\n",
              "      <td>60</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adelphi University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>2186</td>\n",
              "      <td>1924</td>\n",
              "      <td>512</td>\n",
              "      <td>16</td>\n",
              "      <td>29</td>\n",
              "      <td>2683</td>\n",
              "      <td>1227</td>\n",
              "      <td>12280</td>\n",
              "      <td>6450</td>\n",
              "      <td>750</td>\n",
              "      <td>1500</td>\n",
              "      <td>29</td>\n",
              "      <td>30</td>\n",
              "      <td>12.2</td>\n",
              "      <td>16</td>\n",
              "      <td>10527</td>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adrian College</th>\n",
              "      <td>Yes</td>\n",
              "      <td>1428</td>\n",
              "      <td>1097</td>\n",
              "      <td>336</td>\n",
              "      <td>22</td>\n",
              "      <td>50</td>\n",
              "      <td>1036</td>\n",
              "      <td>99</td>\n",
              "      <td>11250</td>\n",
              "      <td>3750</td>\n",
              "      <td>400</td>\n",
              "      <td>1165</td>\n",
              "      <td>53</td>\n",
              "      <td>66</td>\n",
              "      <td>12.9</td>\n",
              "      <td>30</td>\n",
              "      <td>8735</td>\n",
              "      <td>54</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agnes Scott College</th>\n",
              "      <td>Yes</td>\n",
              "      <td>417</td>\n",
              "      <td>349</td>\n",
              "      <td>137</td>\n",
              "      <td>60</td>\n",
              "      <td>89</td>\n",
              "      <td>510</td>\n",
              "      <td>63</td>\n",
              "      <td>12960</td>\n",
              "      <td>5450</td>\n",
              "      <td>450</td>\n",
              "      <td>875</td>\n",
              "      <td>92</td>\n",
              "      <td>97</td>\n",
              "      <td>7.7</td>\n",
              "      <td>37</td>\n",
              "      <td>19016</td>\n",
              "      <td>59</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Alaska Pacific University</th>\n",
              "      <td>Yes</td>\n",
              "      <td>193</td>\n",
              "      <td>146</td>\n",
              "      <td>55</td>\n",
              "      <td>16</td>\n",
              "      <td>44</td>\n",
              "      <td>249</td>\n",
              "      <td>869</td>\n",
              "      <td>7560</td>\n",
              "      <td>4120</td>\n",
              "      <td>800</td>\n",
              "      <td>1500</td>\n",
              "      <td>76</td>\n",
              "      <td>72</td>\n",
              "      <td>11.9</td>\n",
              "      <td>2</td>\n",
              "      <td>10922</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                             Private  Apps  Accept  ...  Expend  Grad.Rate  Cluster\n",
              "Abilene Christian University     Yes  1660    1232  ...    7041         60        1\n",
              "Adelphi University               Yes  2186    1924  ...   10527         56        1\n",
              "Adrian College                   Yes  1428    1097  ...    8735         54        1\n",
              "Agnes Scott College              Yes   417     349  ...   19016         59        1\n",
              "Alaska Pacific University        Yes   193     146  ...   10922         15        1\n",
              "\n",
              "[5 rows x 19 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gn6_ShLGcsyl",
        "outputId": "a08873ac-cfa5-485a-e170-e19f87caa5ae"
      },
      "source": [
        "from sklearn.metrics import accuracy_score, confusion_matrix\n",
        "\n",
        "print(accuracy_score(data_clg['Cluster'], kmeans.labels_))\n",
        "print(pd.DataFrame(classification_report(data_clg['Cluster'], kmeans.labels_, output_dict=True)))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.7786357786357786\n",
            "                    0           1  accuracy   macro avg  weighted avg\n",
            "precision    0.685185    0.793722  0.778636    0.739454      0.764108\n",
            "recall       0.349057    0.939823  0.778636    0.644440      0.778636\n",
            "f1-score     0.462500    0.860616  0.778636    0.661558      0.751992\n",
            "support    212.000000  565.000000  0.778636  777.000000    777.000000\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}